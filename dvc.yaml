stages:
  data_ingestion:
    cmd: python3 -m src.data.data_injestion
    deps:
      - data/raw
    # # params:
    # # - data_ingestion.test_size
    # outs:
    #  - data/processed
  data_preprocessing:
    cmd: python3 -m src.data.data_preprocessing
    deps:
    - data/raw
    # outs:
    # - data/interim/

  input_target_pairs:

    cmd: python src/data/input_target_pairs.py
    deps:
    - data/interim
    - src/data/data_preprocessing.py
    # outs:
    # - data/external

  feature_engineering:
    cmd: python src/features/add_special_tokens.py
    deps:
    - data/external
    - src/features/add_special_tokens.py
    # params:
    # - feature_engineering.max_features
    # outs:
    # - data/special_tokens

  tokenization:
    cmd: python src/features/tokenization.py
    deps:
    - data/special_tokens
    - src/features/add_special_tokens.py
    # params:
    # - feature_engineering.max_features
    # outs:
    # - data/tokenized

  register_model:
    cmd: bash -c "mkdir -p registered_models && echo 'Registered âœ…' > registered_models/status.txt"
    deps:
      - models/final_model/
      - models/final_emotion_model/
      - models/final_tokenizer/
      - models/final_emotion_tokenizer/
    outs:
      - registered_models/status.txt

  evaluate_model:
    cmd: python src/models/bert_model_eval.py
    deps:
      - data/data/emotions_dataset.csv        
      - models/final_emotion_model
      - models/final_emotion_tokenizer
    outs:
      - reports/emotion_evaluation.json       # write metrics here

  run_inference:
    cmd: python src/models/response_generator.py
    deps:
      - models/final_emotion_model
      - models/final_emotion_tokenizer
      - models/final_model
      - models/final_tokenizer
    outs:
      - reports/generated_responses.json
# params:
# - dvclive/params.yaml
# metrics:
# - dvclive/metrics.json
# plots:
# - dvclive/plots/metrics:
#     x: step